name: CI
on: [push]

jobs:
  build-os-python:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.9", "3.11", "3.13"]
    steps:
    - uses: actions/checkout@v3
    - uses: conda-incubator/setup-miniconda@v3.1.1
      with:
        miniforge-version: latest
        conda-version: ">=24.11.3"
        # auto-update-conda: true
        conda-build-version: ">=25.1"
        environment-file: environment.yml
        activate-environment: whl2conda-dev
        python-version: ${{ matrix.python-version }}
        auto-activate-base: true
        condarc-file: github-condarc.yml
        use-mamba: true
    - name: show conda versions
      run: |
        conda list -n base conda
        conda list -n base mamba
    - name: Dev install whl2conda
      run: |
        conda run -n whl2conda-dev pip install -e . --no-deps --no-build-isolation
    - name: ruff
      run: |
        make ruff
    - name: mypy
      if: success() || failure()
      run: |
        make mypy
    - name: check formatting
      if: success() || failure()
      run: |
        make check-format
    - name: Test with pytest
      if: success() || failure()
      run: |
        make external-coverage
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
