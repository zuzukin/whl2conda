name: CI
on: [push]

jobs:
  build-os-python:
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 5
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.9", "3.11", "3.13"]
    steps:
    - uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.9.0
      with:
        pixi-version: v0.48.2
        cache: true
        auth-host: prefix.dev
        auth-token: ${{ secrets.GITHUB_TOKEN }}
    - name: Setup conda (for testing conda functionality)
      uses: conda-incubator/setup-miniconda@v3
      with:
        miniforge-version: latest
        activate-environment: ""
        auto-activate-base: false
        use-mamba: true
        conda-build-version: ">=25.1"
    - name: Override Python version in pixi
      run: |
        pixi add python=${{ matrix.python-version }}
    - name: Install dependencies
      run: pixi run dev-install
    - name: Run linting checks
      run: pixi run ruff
    - name: Run type checking
      if: success() || failure()
      run: pixi run mypy
    - name: Check code formatting
      if: (success() || failure()) && runner.os != 'Windows'
      run: pixi run check-format
    - name: Test with pytest (Windows)
      if: (success() || failure()) && runner.os == 'Windows'
      shell: cmd
      run: |
        set PATH=%CONDA%\condabin;%PATH%
        pixi run external-coverage
    - name: Test with pytest (Unix)
      if: (success() || failure()) && runner.os != 'Windows'
      shell: bash
      run: |
        export PATH="$CONDA/bin:$PATH"
        pixi run external-coverage
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
